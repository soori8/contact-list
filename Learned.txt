- the key must be uniqe and i cannot use index of array as a child component key because whenever indexes change react can't track that specific node because its key changes as well and we need to define a UniqueId fuction to produce keys from its parrent  keyId(){
    this.uniqueId=this.uniqueId || 0;
    return this.uniqueId++;
  }

- use const props =this.props; inside render to avoid call this every time

- for input read we have 2 approch:
	1. <input value={this.state.txt} onChange={this.setState({txt:e.target.value})} /> 
	2. <input ref="txt" defaultValue={this.props.value}/> then we can read its new value by {this.refs.txt.value}

- we can use const for searchBar if we don't want to evaluate the input or save it

- the things connected to render() and need when it change the app reRender() we use State. if not we can use this.newObj =value;

- Datebase=> 1)React state   2)this.obj(infact we set property to that particular object(app,window...))    3)redux

-we can use ajax call inside componentwillMount

- this.props.children return the node inside an app like <myApp prop1="">return this amount</myApp>